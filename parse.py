from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig, UndetectedAdapter
from crawl4ai.async_crawler_strategy import AsyncPlaywrightCrawlerStrategy
import asyncio


async def check_summary_exists(browser_config, crawler_strategy):
    run_config = CrawlerRunConfig(
        css_selector = ".noarticletext"
    )

    async with AsyncWebCrawler(crawler_strategy = crawler_strategy, config = browser_config) as crawler:
        result = await crawler.arun(
            url = "https://en.wikivoyage.org/wiki/Paris",
            config = run_config
        )
        print(result.cleaned_html)

        if not result.success:
            return False 
        
        if not result.cleaned_html == "<html></html>":
            return False 
        
        return True

async def get_general_summary(browser_config, crawler_strategy):
    summary_exists = await check_summary_exists()
    if not summary_exists:
        return "We couldn't find a good summary for that location --- here's an alternative, generated by Gemini:"

async def main():
    # Setup browser config and adapter
    undetected_adapter = UndetectedAdapter()

    browser_config = BrowserConfig(
        enable_stealth = True,
        headless = False,
        viewport_width = 1980,
        viewport_height = 1080,
        text_mode = True
    )

    crawler_strategy = AsyncPlaywrightCrawlerStrategy(
        browser_config = browser_config,
        browser_adapter = undetected_adapter
    )

    print(await check_summary_exists(browser_config, crawler_strategy))


if __name__ == "__main__":
    asyncio.run(main())